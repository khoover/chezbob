#!/usr/bin/env python3
#
# Execute bits of the Chez Bob Django code, initializing Django appropriately.
# Some of this code is copied from the django.core.management module, since it
# doesn't seem that the code there is easily extensible.

import datetime
import os
import sys

import django
import chezbob

# Read in the settings module and initialize Django.
project_directory = os.path.dirname(sys.argv[0])
sys.path.append(project_directory)
sys.path.append(os.path.join(project_directory, '..'))

# Allow non-ASCII characters on output even if stdout is redirected.
# This causes odd errors in python 3... and we want everything unicoded anyway,
# which is now the default.
#sys.stdout = codecs.getwriter(locale.getpreferredencoding())(sys.stdout)

try:
    import settings
except ImportError:
    sys.stderr.write("Unable to load Django settings file from directory %s.\n"
                     % project_directory)
    sys.exit(1)

os.environ['DJANGO_SETTINGS_MODULE'] = 'chezbob.settings'

django.setup()


def html_dump(func, title=""):
    """Call the given function to dump a static HTML data page.

    The function will be called with an open file as the sole argument, to
    which the body of the HTML page should be written.
    """

    sys.stdout.write("""<!DOCTYPE html>
<html>
<head>
<title>%s</title>
<script type="text/javascript" src="/js/jquery.js"></script>
<script type="text/javascript" src="/js/tablesorter/jquery.tablesorter.js">
    </script>
<link rel="stylesheet" type="text/css" href="/js/tablesorter/style.css" />
<body>
<h1>%s</h1>
""" % (title, title))
    func(sys.stdout)
    sys.stdout.write("</body>\n</html>\n")

# Examine the command-line to determine what action has been requested.
action = sys.argv[1]

if action == 'finance_sync':
    import chezbob.util.sync_db
    chezbob.util.sync_db.sync()
elif action == 'cash_check':
    import chezbob.util.sync_db
    chezbob.util.sync_db.check_cash()
elif action == 'inventory_sync':
    import chezbob.util.inventory

    # Commit changes to cached inventory values for the current financial year
    # (July-June).  Do not close out the last year until approximately one
    # month after it ends, to allow time for final inventory accounting to be
    # entered.
    year = datetime.date.today().year - 1
    if (datetime.date.today() - datetime.date(year, 7, 1)).days > 400:
        year = year + 1
    commit = datetime.date(year, 7, 1)
    start = datetime.date(year, 1, 1)
    chezbob.util.inventory.summary(start, commit_start=commit)

elif action == 'loss_report':
    import chezbob.util.inventory
    chezbob.util.inventory.category_report(datetime.date(2010, 12, 16),
                                           datetime.date(2011, 2, 24))
elif action == 'itemized_loss_report':
    import chezbob.util.inventory
    chezbob.util.inventory.item_report(datetime.date(2011, 1, 1))
elif action == 'gnuplot_dump':
    import chezbob.finance.views
    for line in chezbob.finance.views.gen_gnuplot_dump():
        sys.stdout.write(line)
elif action == 'update_prices':
    # Update prices of all items based on current bulk item costs and
    # per-location markups (in the floor_locations table).  This also dumps an
    # HTML file with current prices to stdout, which can made available to post
    # the current prices.
    import chezbob.util.pricing
    html_dump(chezbob.util.pricing.update_price_listing,
              "Current Chez Bob Prices")
else:
    sys.stderr.write("Unknown action: %s\n", action)
    sys.exit(1)
